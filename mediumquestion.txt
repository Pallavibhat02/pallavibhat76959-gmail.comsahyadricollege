

2]Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

The steps are as follows:

step 1]Initialize 4 variables:

step2] cnt1 & cnt2 –  for tracking the counts of elements
	el1 & el2 – for storing the majority of elements.
step3] Traverse through the given array.

step4]If cnt1 is 0 and the current element is not el2 then store the current element of the array as el1 along with increasing the cnt1 value by 1.

step 5]If cnt2 is 0 and the current element is not el1 then store the current element of the array as el2 along with increasing the cnt2 value by 1.

step 6]If the current element and el1 are the same increase the cnt1 by 1.

step 7]If the current element and el2 are the same increase the cnt2 by 1.

step 8]Other than all the above cases: decrease cnt1 and cnt2 by 1.

step 9]The integers present in el1 & el2 should be the result we are expecting. So, using another loop, we will manually check their counts if they are greater than the floor(N/3).


code:





import java.util.*;
import java.util.Scanner;

public class majority {
    public static List<Integer> majorityElement(int []v) {
        int n = v.length; //size of the array

        int cnt1 = 0, cnt2 = 0; // counts
        int el1 = Integer.MIN_VALUE; // element 1
        int el2 = Integer.MIN_VALUE; // element 2

        // applying the Extended Boyer Moore's Voting Algorithm:
        for (int i = 0; i < n; i++) {
            if (cnt1 == 0 && el2 != v[i]) {
                cnt1 = 1;
                el1 = v[i];
            } else if (cnt2 == 0 && el1 != v[i]) {
                cnt2 = 1;
                el2 = v[i];
            } else if (v[i] == el1) cnt1++;
            else if (v[i] == el2) cnt2++;
            else {
                cnt1--; cnt2--;
            }
        }

        List<Integer> ls = new ArrayList<>(); // list of answers

        // Manually check if the stored elements in
        // el1 and el2 are the majority elements:
        cnt1 = 0; cnt2 = 0;
        for (int i = 0; i < n; i++) {
            if (v[i] == el1) cnt1++;
            if (v[i] == el2) cnt2++;
        }

        int mini = (int)(n / 3) + 1;
        if (cnt1 >= mini) ls.add(el1);
        if (cnt2 >= mini) ls.add(el2);

       
       
        return ls;
    }

    public static void main(String args[]) {
        Scanner sc= new Scanner(System.in);
	int n=sc.nextInt();
	int arr[]=new int[n];
        List<Integer> ans = majorityElement(arr);
        System.out.print("The majority elements are: ");
        for (int i = 0; i < ans.size(); i++) {
            System.out.print(ans.get(i) + " ");
        }
        System.out.println();
    }
}
